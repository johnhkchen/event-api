# Event API - Production Deployment via Coolify
# This compose file is used by Coolify for production deployment
# The actual services run within the Flox-generated container

services:
  # Main application container (generated by flox containerize)
  event-api:
    image: event-api:${IMAGE_TAG:-latest}
    container_name: event-api-production
    ports:
      - "3000:3000"  # Hono API
      - "4000:4000"  # Elixir Service
      - "8080:8080"  # BAML Service
    environment:
      # Database connection
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB:-event_api_production}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      
      # Service configuration
      - NODE_ENV=production
      - MIX_ENV=prod
      - PORT=3000
      - ELIXIR_PORT=4000
      - BAML_PORT=8080
      
      # AI/LLM services
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Internal service URLs
      - HONO_API_URL=http://localhost:3000
      - ELIXIR_SERVICE_URL=http://localhost:4000
      - BAML_SERVICE_URL=http://localhost:8080
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health", "&&", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    networks:
      - event-api-production
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # Production database
  database:
    image: pgvector/pgvector:pg15
    container_name: event-api-db-production
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-event_api_production}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./scripts/docker/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB:-event_api_production}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - event-api-production
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  postgres_prod_data:
    driver: local

networks:
  event-api-production:
    driver: bridge
    name: event-api-production

# Production environment variables should be set via Coolify UI:
# DATABASE_URL=postgresql://user:pass@database:5432/event_api_production
# POSTGRES_DB=event_api_production
# POSTGRES_USER=event_api_prod
# POSTGRES_PASSWORD=<secure_password>
# OPENAI_API_KEY=sk-...